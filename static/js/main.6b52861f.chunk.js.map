{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","Container","InputGroup","Input","placeholder","InputGroupAddon","addonType","Button","style","backgroundColor","marginTop","display","justifyItems","alignItems","gridTemplateColumns","width","minHeight","borderBottom","borderTop","className","justifySelf","id","type","htmlFor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAsDeA,MAnDf,WACE,OACI,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,YAAY,8EACnB,cAACC,EAAA,EAAD,CAAiBC,UAAW,SAA5B,SACE,cAACC,EAAA,EAAD,CAAQC,MAAO,CACbC,gBAAiB,WADnB,oBAKJ,sBAAKD,MAAO,CACVE,UAAW,QADb,UAGE,sBAAKF,MAAO,CACVG,QAAS,OACTC,aAAc,SACdC,WAAY,SACZC,oBAAqB,YACrBC,MAAO,OACPC,UAAW,OACXC,aAAc,kBACdC,UAAW,mBARb,UAUE,sBAAKC,UAAW,QAASX,MAAO,CAACY,YAAa,cAA9C,UACE,uBAAOC,GAAG,WAAWC,KAAM,aAC3B,uBAAOC,QAAQ,gBAEjB,2CAEF,sBAAKf,MAAO,CACVG,QAAS,OACTC,aAAc,SACdC,WAAY,SACZC,oBAAqB,YACrBC,MAAO,OACPC,UAAW,OACXC,aAAc,kBACdC,UAAW,mBARb,UAUE,sBAAKC,UAAW,QAASX,MAAO,CAACY,YAAa,cAA9C,UACE,uBAAOC,GAAG,YAAYC,KAAM,aAC5B,uBAAOC,QAAQ,iBAEjB,kDCnCGC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6b52861f.chunk.js","sourcesContent":["import {Button, Container, Input, InputGroup, InputGroupAddon} from \"reactstrap\";\n\n\nfunction App() {\n  return (\n      <Container>\n        <InputGroup>\n          <Input placeholder=\"Название дела\"/>\n          <InputGroupAddon addonType={\"append\"}>\n            <Button style={{\n              backgroundColor: \"#3a62fb\"\n            }}>+</Button>\n          </InputGroupAddon>\n        </InputGroup>\n        <div style={{\n          marginTop: \"10px\"\n        }}>\n          <div style={{\n            display: \"grid\",\n            justifyItems: \"center\",\n            alignItems: \"center\",\n            gridTemplateColumns: \"50px auto\",\n            width: \"100%\",\n            minHeight: \"80px\",\n            borderBottom: \"1px solid black\",\n            borderTop: \"1px solid black\"\n          }}>\n            <div className={\"round\"} style={{justifySelf: \"flex-start\"}}>\n              <input id=\"checkbox\" type={\"checkbox\"}/>\n              <label htmlFor=\"checkbox\"></label>\n            </div>\n            <div >Hello</div>\n          </div>\n          <div style={{\n            display: \"grid\",\n            justifyItems: \"center\",\n            alignItems: \"center\",\n            gridTemplateColumns: \"50px auto\",\n            width: \"100%\",\n            minHeight: \"80px\",\n            borderBottom: \"1px solid black\",\n            borderTop: \"1px solid black\"\n          }}>\n            <div className={\"round\"} style={{justifySelf: \"flex-start\"}}>\n              <input id=\"checkbox1\" type={\"checkbox\"}/>\n              <label htmlFor=\"checkbox1\"></label>\n            </div>\n            <div >Hello</div>\n          </div>\n        </div>\n      </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}